function Pattern.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push constant 24
pop this 1
push constant 40
pop this 2
push constant 16408
pop this 3
push constant 20528
pop this 4
push constant 20544
pop this 5
push constant 24568
pop this 6
push pointer 0
return
function Pattern.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Pattern.drawFirstQuadrant 3
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 3
pop this 7
push constant 0
pop local 1
push this 0
call Bits.mirror 1
pop local 2
label WHILE_EXP0
push local 0
not
not
if-goto WHILE_END0
push this 7
push local 2
call Memory.poke 2
pop temp 0
push local 1
push constant 1
add
pop local 1
push local 1
push constant 7
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push constant 1
call Bits.rotateLeft 2
pop local 2
push this 7
push this 1
add
pop this 7
push constant 0
pop local 1
label IF_FALSE0
push this 7
push constant 1
add
pop this 7
push this 7
push this 5
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 0
label IF_FALSE1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Pattern.drawSecondQuadrant 3
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 4
pop this 7
push constant 0
pop local 1
push this 0
pop local 2
label WHILE_EXP0
push local 0
not
not
if-goto WHILE_END0
push this 7
push local 2
call Memory.poke 2
pop temp 0
push local 1
push constant 1
add
pop local 1
push local 1
push constant 7
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push constant 1
call Bits.rotateLeft 2
pop local 2
push this 7
push this 2
sub
pop this 7
push constant 0
pop local 1
label IF_FALSE0
push this 7
push constant 1
add
pop this 7
push this 7
push this 3
push constant 40
sub
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 0
label IF_FALSE1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Pattern.drawThirdQuadrant 3
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 4
pop this 7
push constant 0
pop local 1
push this 0
pop local 2
label WHILE_EXP0
push local 0
not
not
if-goto WHILE_END0
push this 7
push local 2
call Memory.poke 2
pop temp 0
push local 1
push constant 1
add
pop local 1
push local 1
push constant 7
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push constant 1
call Bits.rotateLeft 2
pop local 2
push this 7
push this 1
add
pop this 7
push constant 0
pop local 1
label IF_FALSE0
push this 7
push constant 1
add
pop this 7
push this 7
push this 6
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 0
label IF_FALSE1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Pattern.drawFourthQuadrant 3
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 6
pop this 7
push constant 0
pop local 1
push this 0
call Bits.mirror 1
pop local 2
push local 2
push constant 3
call Bits.rotateLeft 2
pop local 2
label WHILE_EXP0
push local 0
not
not
if-goto WHILE_END0
push this 7
push local 2
call Memory.poke 2
pop temp 0
push local 1
push constant 1
add
pop local 1
push local 1
push constant 7
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push constant 1
call Bits.rotateLeft 2
pop local 2
push this 7
push this 2
sub
pop this 7
push constant 0
pop local 1
label IF_FALSE0
push this 7
push constant 1
add
pop this 7
push this 7
push this 5
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 0
label IF_FALSE1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
